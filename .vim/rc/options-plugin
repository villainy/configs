"" Airline
"Use airline for tab row
let g:airline#extensions#tabline#enabled = 1
"Don't show top buffer row
let g:airline#extensions#tabline#show_buffers = 0
"Only show tab row if we have more than 1 tab
let g:airline#extensions#tabline#tab_min_count = 2
"Show tab number instead of split count in tab row
let g:airline#extensions#tabline#tab_nr_type = 1
"Hide number from tab row
let g:airline#extensions#tabline#show_tab_nr = 0
"Allow spaces after tabs otherwise PHP docblocks throw warnings (or follow
"PSR-2 style and use spaces instead of tabs...)
"let g:airline#extensions#whitespace#mixed_indent_algo = 2
"Just disable mixed indent warnings altogether then
let g:airline#extensions#whitespace#checks = [ 'trailing', 'long' ]
let g:airline_theme = 'murmur'
let g:airline_powerline_fonts = 1
let g:Powerline_symbols = 'fancy'

"" Syntastic
"Use java class path config file
let g:syntastic_java_javac_config_file_enabled = 1
"Don't run syntax checks on every save. This gets really slow and hangs vim
"while checks run.
let g:syntastic_mode_map = {
	\ "mode": "passive",
	\ "active_filetypes": [],
	\ "passive_filetypes": [] }
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_javascript_checkers = ['eslint']

"" UltiSnips
"vsplit when editing snippet file
let g:UltiSnipsEditSplit="vertical"
"Map tab/shifttab for entering snippet popup instead of whatever the insane
"default was
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<S-tab>"
"Integrate with YCM
let g:UltiSnipsExpandTrigger="<nop>"
let g:ulti_expand_or_jump_res = 0
"Local snippet vars
let g:snips_author = 'Michael Morgan <mmorgan@sevone.com>'
let g:snips_copyright = 'SevOne Inc.'
"Allow enter key to use a snippet
function! <SID>ExpandSnippetOrReturn()
  let snippet = UltiSnips#ExpandSnippetOrJump()
  if g:ulti_expand_or_jump_res > 0
    return snippet
  else
    return "\<C-Y>"
  endif
endfunction
imap <expr> <CR> pumvisible() ? "<C-R>=<SID>ExpandSnippetOrReturn()<CR>" : "<Plug>delimitMateCR"

"" Java autocompletion
"Enable installed language packs
let g:javaapi#delay_dirs = [
  \ 'java-api-javax',
  \ 'java-api-org',
  \ 'java-api-sun',
  \ 'java-api-servlet2.3',
  \ 'java-api-android',
  \ ]

" Default GitGitter off
let g:gitgutter_enabled = 0

" Default eregex off
let g:eregex_default_enable = 0

"These do... something
let g:tagbar_sort = 0
let skeletons#autoRegister = 1

" Fix IndentGuides highlighting for terminal
let g:indent_guides_auto_colors = 0
highlight IndentGuidesOdd ctermbg=234
highlight IndentGuidesEven ctermbg=235

" Disable verbose cscope to hide duplicate db warnings
set nocscopeverbose

" Force quickfix window location
let g:toggle_list_copen_command="botright copen"

let g:go_bin_path = '/home/mmorgan/.go/bin'

" Exclude node_modules from gutentags or you'll just run out of memory have
" have a multi-GB tags file...
let g:gutentags_exclude = [ 'node_modules' ]

" Use jsctags for tagbar javascript
"let g:tagbar_type_javascript = {
    "\ 'ctagsbin' : '/usr/bin/jsctags',
    "\ 'ctagsargs' : '-f <'
"\ }

let g:tagbar_type_php = {
	\ 'cagsbin' : '/home/mmorgan/bin/phpctags',
	\ 'ctagsargs' : '--extensions=+.inc'
\ }

" Additional syntax from vim-go
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

" vim: ft=vim
